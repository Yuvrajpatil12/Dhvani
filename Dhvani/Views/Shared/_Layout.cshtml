@using Core.Entity.Enums
@using Core.Resources
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@using Core.Utility.Common;
@using Core.Entity;
<!DOCTYPE html>
<html lang="en">
<head>
    @*<meta charset="utf-8" />
    @*<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />*@

    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta name="author" content="aivoice">
    <meta http-equiv="X-UA-Compatible" content="IE=edge, chrome=1">
    <meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no' name='viewport'>

    <!-- Facebook -->
    <meta property="og:url" content="https://aivoice.logthis.in/">
    <meta property="og:type" content="website">
    <meta property="og:title" content="aivoice">
    <meta property="og:description" content="aivoice">
    <meta property="og:image" content="https://aivoice.logthis.in/images/sharing-with-facebook.jpg">
    <meta property="og:image:width" content="600">
    <meta property="og:image:height" content="315">

    <!-- Linkedin -->
    <meta property="og:image" content="https://aivoice.logthis.in/images/sharing-with-linkedin.jpg">
    <meta property="og:image:width" content="180">
    <meta property="og:image:height" content="110">

    <!-- Twitter -->
    <meta name="twitter:image" content="https://aivoice.logthis.in/images/sharing-with-twitter.jpg">

    <!-- Write Custom Page Meta Data Here... -->
    <meta name="title" content="aivoice">
    <meta name="description" content="aivoice">
    <meta name="keywords" content="aivoice">
    <title>@ViewData["Title"] - Aivoice</title>

    <link rel="shortcut icon" href="~/images/favicon.ico" />
    <!-- Font Awesome -->
    <link href="~/plugins/fontawesome-free/css/all.min.css" rel="stylesheet" />
    <!-- Ionicons -->
    @*<link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css" />*@
    <!-- Tempusdominus Bbootstrap 4 -->
    <link href="~/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />
    <!-- Theme style -->
    <link href="~/plugins/AdminLTE/css/AdminLTE.min.css" rel="stylesheet" />
    <!-- overlayScrollbars -->
    <link href="~/plugins/overlayScrollbars/css/OverlayScrollbars.min.css" rel="stylesheet" />
    <!-- Date Picker -->
    <link href="~/css/bootstrap-datepicker.css" rel="stylesheet" />
    <!-- Custom style -->
    @*<link href="~/css/site.css" rel="stylesheet" />*@
    <script>
        var custDateTimeCSS = new Date().getTime();
        document.write("<link href=\"/css/site.css?v=" + custDateTimeCSS + "\" rel='stylesheet' type='text/css' />");
    </script>
    <link href="~/css/jquery-ui.css" rel="stylesheet" />

    <!-- jQuery -->
    <script src="~/js/jquery-2.1.3.js" type="text/javascript"></script>
    <script src="~/js/jquery-ui.js" type="text/javascript"></script>
    <!-- Bootstrap 4 -->
    <script src="~/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- Dialogs //Custom JS BS3 to BS4 -->
    <script src="~/plugins/bs4/bootstrap-dialog.min.js"></script>
    <script src="~/plugins/bs4/bootstrap-dialog-custom-bs4.js"></script>
    <!-- Date Picker -->
    @*<script src="~/js/bootstrap-datepicker.js"></script>*@
    <!-- Validate -->
    <script src="~/js/jquery.validate.js" type="text/javascript"></script>
    <script src="~/js/jquery.validate.unobtrusive.js" type="text/javascript"></script>
    <!-- overlayScrollbars -->
    <script src="~/plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
    <!-- AdminLTE App -->
    <script src="~/plugins/AdminLTE/js/AdminLTE.min.js"></script>
    <script src="~/js/global.js"></script>
    @* <script src="~/js/common.js"></script> *@
    <!-- Global Strings - Content -->
    @*<script src="~/js/global.js"></script>*@
    <!-- Common functions -->
    @*<script src="~/js/common.js"></script>*@
    <script>
        var custDateTime = new Date().getTime();
        document.write("<script src=\"/js/global.js?v=" + custDateTime + "\"><\/script>");
        document.write("<script src=\"/js/common.js?v=" + custDateTime + "\"><\/script>");
        // document.write("<script src=\"/js/mix-panel.js?v=" + custDateTime + "\"><\/script>");
    </script>

    @* <script>
    var custDateTime = new Date().getTime();
    document.write("<script src=\"/js/global.js?v=" + custDateTime + "\"><\/script>");
    document.write("<script src=\"/js/common.js?v=" + custDateTime + "\"><\/script>");
    </script>*@
    <script src="~/js/setLayout.js"></script>
    <script src="~/js/voice.js"></script>
    @* @{
    var _id = (HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserId.ToString()) != null ? Convert.ToString(HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserId.ToString())) : "");
    var _username = (HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserEmailID.ToString()) != null ? Convert.ToString(HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserEmailID.ToString())) : "");
    var _usernameTrimmed = !string.IsNullOrWhiteSpace(_username) && _username.Length > 17 ? _username.Trim().Substring(0, 17) + "..." : _username;
    var _name = (HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.FirstName.ToString()) != null ? Convert.ToString(HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.FirstName.ToString())) : "") + " " + (HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.LastName.ToString()) != null ? Convert.ToString(HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.LastName.ToString())) : "");

    TempData["nameTrimmed"] = _name;
    TempData["UserEmail"] = _usernameTrimmed;
    var _role = (HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserRole.ToString()) != null ? Convert.ToString(HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserRole.ToString())) : "");
    TempData["UserRole"] = _role;
    var _logo = (HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserLogo.ToString()) != null ? Convert.ToString(HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserLogo.ToString())) : "");
    }*@

    @{
        var _id = (HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserId.ToString()) != null ? Convert.ToString(HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserId.ToString())) : "");
        TempData["UserId"] = _id;
        var _username = (HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserEmailID.ToString()) != null ? Convert.ToString(HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserEmailID.ToString())) : "");
        var _usernameTrimmed = !string.IsNullOrWhiteSpace(_username) && _username.Length > 17 ? _username.Trim().Substring(0, 17) + "..." : _username;
        var _name = (HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.FirstName.ToString()) != null ? Convert.ToString(HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.FirstName.ToString())) : "") + " " + (HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.LastName.ToString()) != null ? Convert.ToString(HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.LastName.ToString())) : "");
        //var _nameTrimmed = !string.IsNullOrWhiteSpace(_name) && _name.Length > 17 ? _name.Trim().Substring(0, 17) + "..." : _name;
        TempData["nameTrimmed"] = _name;
        var _role = (HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserRole.ToString()) != null ? Convert.ToString(HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserRole.ToString())) : "");
        TempData["UserRole"] = _role;
        var _logo = (HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserLogo.ToString()) != null ? Convert.ToString(HttpContextAccessor.HttpContext.Session.GetString(KeyEnums.SessionKeys.UserLogo.ToString())) : "");

    }

    <script type="text/javascript">


        var divImpersonationIsVisible = true;
        var id = 0;
        $(document).ready(function () {


            var _username = ""
            var originalUsername = "";

            $(document).on("click", "#btnImpersonation_0", function (e) {
                if (divImpersonationIsVisible) {
                    _username = $(this).attr("_un");
                    originalUsername = $(this).attr("_oun");

                    console.log(">>" + originalUsername);

                    BootstrapDialog.show({
                        id: "divImpersonation",
                        title: "Message",
                        size: BootstrapDialog.SIZE_NORMAL,
                        message: function () {
                            var $message = $('<div id="divImpersonationCh" class="box box-no-border-shadow pTB10-LR05" style="margin:0px;"></div>');

                            var result = '';
                            result += '<div style="margin-bottom: 15px;">';
                            result += "You are being logged out of " + originalUsername + " and you will be login in as " + _username + ".",
                                result += '</div>';
                            result += '<div style="border-top: 1px solid #e9ecef; padding-top: .75rem; text-align: right;">';
                            result += '     <button type="button" class="btn btn-default" data-dismiss="modal" id="btnCloseImpersonation">Cancel</button>';
                            result += '     <button type="button" class="btn btn-primary" id="btnSubmit">Ok</button>';
                            result += '</div>';

                            $message.append(result);
                            return $message;
                        },
                        onshown: function (dialogRef) {
                            submitResult(_username, originalUsername);
                            // setTimeout(function () {
                            closeImpersonation();
                            // }, 500);
                        },
                        closeByBackdrop: false,
                        closable: false,
                    });

                    divImpersonationIsVisible = false;
                }
            });

        });
        function submitResult(_username, current_username) {
            $("#btnSubmit").click(function () {
                $("#divImpersonationCh").append(getLoader());
                $.ajax({
                    type: "POST",
                    data: { username: _username, currentUser: current_username },
                    url: '@Url.Action("Impersonation", "Users")',
                    success: function (data) {
                        console.log(data);
                        //location.reload();
                        //window.location.href = "../Dashboard/Index"

                        // Extract the returnUrl data from the data object.
                        var returnUrl = data.returnUrl;

                        // Set the window.location.href property to the returnUrl value.
                        if (returnUrl != null) {

                            id = data.data.id;

                            window.location.href = returnUrl;
                            //setMixPanel(id);


                        }
                        //if (returnUrl.length === 0) {
                        //    console.log("The returnUrl variable is empty.");
                        //} else if (typeof returnUrl === "undefined" || returnUrl === null) {
                        //    console.log("The returnUrl variable is empty.");
                        //} else {
                        //    console.log("The returnUrl variable is not empty.");
                        //}

                    },
                    complete: function () {
                        removeLoader("#divImpersonationCh");
                        _username = "";
                        //console.log("After Submit : " + _username);
                    }
                });
            });
        }

        //function submitResult(_username, current_username) {

        //    $("#btnSubmit").click(function () {
        //        $("#divImpersonationCh").append(getLoader());
        //        $.ajax({
        //            type: "POST",
        //            data: { username: _username, currentUser: current_username },
        //            url: '@Url.Action("Impersonation", "Users")',
        //            success: function (data) {

        //                //location.reload();
        //                if (data.id == 1) {
        //                    window.location.href = "../SchoolHQAdmin/Index"
        //                }
        //                else if (data.id == 7) {
        //                    window.location.href = "../School/Index"
        //                }
        //                else {
        //                    window.location.href = "../Home/Index"
        //                }

        //            },
        //            complete: function () {
        //                removeLoader("#divImpersonationCh");
        //                _username = "";
        //                //console.log("After Submit : " + _username);
        //            }
        //        });
        //    });
        //}

        function closeImpersonation() {
            $("#btnCloseImpersonation").click(function () {
                divImpersonationIsVisible = true;
                $('#divImpersonation').modal('hide');
            })
        }

        $(function () {
            /*var params = window.location.pathname;
            params = params.toLowerCase();

            if (params != "/") {
                $(".nav-sidebar li a").each(function (i) {
                    var obj = this;
                    var url = $(this).attr("href");
                    if (url == "" || url == "#") {
                        return true;
                    }
                    url = url.toLowerCase();
                    console.log("params: ", params + " url: " + url);
                    console.log("URL State: " + url.indexOf(params) > -1);
                    if (url.indexOf(params) > -1) {
                        $(this).parent().addClass("active open menu-open");
                        $(this).parent().parent().addClass("active open menu-open");
                        $(this).parent().parent().parent().addClass("active open menu-open");
                        $(this).parent().parent().parent().parent().addClass("active open menu-open");
                        $(this).parent().parent().parent().parent().parent().addClass("active open menu-open");
                        return false;
                    }
                });
            }*/
            var winLoc = window.location.href;
            var params = window.location.pathname;
            params = params.toLowerCase();

            if (params != "/") {
                $(".nav-sidebar li a").each(function (i) {
                    var obj = this;
                    var url = $(this).attr("href");
                    //console.log("URL: ", url);
                    if (url == "" || url == "#") {
                        return true;
                    }
                    url = url.toLowerCase();
                    //console.log("params: ", params + " url: " + url);
                    //console.log("URL State: " + url.indexOf(params) > -1 + " :: ", params != "/");
                    if (url.indexOf(params) > -1) {
                        //console.log("If Params: ", params + " url: ", url);
                        //console.log("If: Params: ", params + " ***** URL: " + winLoc);
                        $(this).parent().addClass("active open menu-open");
                        $(this).parent().parent().addClass("active open menu-open");
                        $(this).parent().parent().parent().addClass("active open menu-open");
                        $(this).parent().parent().parent().parent().addClass("active open menu-open");
                        $(this).parent().parent().parent().parent().parent().addClass("active open menu-open");
                        return false;
                    }
                    else {
                        //console.log("Else Params: ", params + " url: ", url);
                        //console.log("Else: Params: ", params + " ***** URL: " + winLoc);
                        if (winLoc.indexOf("School") > -1 ||
                            winLoc.indexOf("School/") > -1 ||
                            winLoc.indexOf("School/Index") > -1 ||
                            winLoc.indexOf("School/AddSchool") > -1 ||
                            winLoc.indexOf("DisableSchool/Index") > -1 ||
                            winLoc.indexOf("Teacher/Index") > -1 ||
                            winLoc.indexOf("Teacher/AddTeacher") > -1 ||
                            winLoc.indexOf("class/AddClass") > -1 ||
                            winLoc.indexOf("Class/Index") > -1 ||
                            winLoc.indexOf("Class/AddClass") > -1 ||
                            winLoc.indexOf("Student/Index") > -1 ||
                            winLoc.indexOf("Student/AddStudent") > -1 ||
                            winLoc.indexOf("Enquiry/Index") > -1 ||
                            winLoc.indexOf("GradeMaster/Index") > -1 ||
                            winLoc.indexOf("GradeMaster/AddGrades") > -1 ||
                            winLoc.indexOf("SchoolHQAdmin/AddHQAdmin") > -1 ||
                            winLoc.indexOf("Playlist/AddPlayList") > -1 ||
                            winLoc.indexOf("ResultSummaryGradeLevel/Index") > -1
                        ) {
                            //console.log("Else Level 2: ", $(this).hasClass("active"));
                            if ($(this).hasClass("active") == true) {
                                console.log("Level 2 - hasClass Active");
                                $(".nav-item.has-treeview").not($(this).parent().parent().parent().addClass("active open menu-open")).removeClass("active open menu-open");
                            }
                        }

                        if (winLoc.indexOf("Topics/Index") > -1 ||
                            winLoc.indexOf("Topics/AddTopics") > -1) {
                            //console.log("Else Level 3: ", $(this).hasClass("active"));

                            if ($(this).hasClass("active") == true) {
                                //console.log("Level 3 - hasClass Active");
                                //$(".nav-item.has-treeview").not($(this).parent().parent().parent().addClass("active open menu-open")).removeClass("active open menu-open");
                                //$(".nav-item.has-treeview").not($(this).parent().parent().parent().parent().parent().addClass("active open menu-open")).removeClass("active open menu-open");
                                $(".nav-item.has-treeview").removeClass("active open menu-open");
                                $(this).parent().parent().parent().addClass("active open menu-open");
                                $(this).parent().parent().parent().parent().parent().addClass("active open menu-open");
                            }

                        }
                    }
                });
            }

            if (params == "/school") {
                $("#li_schoolFranchise").addClass("active open menu-open");
                $("#li_hQAdmin").removeClass("active open menu-open");
            }
            if (params == "/disableschool") {
                $("#li_schoolFranchise").addClass("active open menu-open");
                $("#li_hQAdmin").removeClass("active open menu-open");
            }
            setTimeout(function () {
                $("#divLoaderOnLayoutResultSummary").hide();
            }, 3000);
        });

    </script>

</head>
<body class="hold-transition sidebar-mini layout-fixed">
    <div class="wrapper">
        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-white navbar-light">
            <!-- Left navbar links -->
            <ul class="navbar-nav cust-hamburgermenu">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
                </li>
            </ul>

            @{
                string Impersonation_Users = HttpContextAccessor.HttpContext.Session.GetString("Impersonation_Users");
                List<string> lstbreadcrumbs = new List<string>();
                if (Impersonation_Users != null)
                {
                    Impersonation_Users = Impersonation_Users.TrimEnd(',');
                    lstbreadcrumbs = Impersonation_Users.Split(',').ToList();
                }

                if (lstbreadcrumbs != null)
                {
                    if (lstbreadcrumbs.Count() > 1)
                    {
                        <div aria-label="breadcrumb" class="cust-breadcrumb">
                            <div class="cust-breadcrumb-inner">
                                <div class="breadcrumb">
                                    @{
                                        int i = lstbreadcrumbs.Count;

                                        foreach (var item in lstbreadcrumbs)
                                        {
                                            if (i != lstbreadcrumbs.Count)
                                            {
                                                <span class="breadcrumb-item wordbreak jsUserImpersonation" style="color:#757575;" _un="@item">@item</span>
                                                i++;
                                            }
                                            else
                                            {
                                                <span class="breadcrumb-item wordbreak active jsUserImpersonation  cust-span-link" id="btnImpersonation_0" _un="@item" _oun="@ViewBag.UserName" aria-current="page" style="color:#757575;" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="item">@item</span>
                                            }
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <ol class="breadcrumb" style="width: auto; display: none; position: relative; top: 8px; background:none;"> <li class="breadcrumb-item"></li> </ol>
                }
            }
            <!-- Right navbar links -->
            <ul class="navbar-nav ml-auto">
                <!-- Notifications Dropdown Menu -->
                <li class="nav-item dropdown custUserMenuBlock">
                    @* <a class="nav-link cust-user-nav-link" data-toggle="dropdown" href="#">
                        <i class="fas fa-user" style="color: #ffffff;"></i>
                    </a> *@
                    <a class="nav-link dropdown-toggle layout-profileicon" data-toggle="dropdown" href="#">
                        <img src="~/images/avatar5.png" class="user-image img-circle elevation-2" alt="User Image">
                    </a>
                    <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right">
                        <span class="dropdown-item dropdown-header">@TempData["nameTrimmed"]</span>
                        <div class="dropdown-divider"></div>
                        @{
                            @if (TempData["UserRole"].ToString() == "3")
                            {
                                <a class="dropdown-item dropdown-footer" asp-area="" asp-controller="Admin" asp-action="AddEdit" asp-route-id="@TempData["UserId"]" asp-route-profile="true" data-category="Profile">Profile</a>
                                <div class="dropdown-divider"></div>
                            }                           

                        }
                        <span class="dropdown-item dropdown-header">@TempData["UserEmail"]</span>
                        <a class="dropdown-item dropdown-footer" asp-area="" asp-controller="Users" asp-action="Logout">Logout</a>
                    </div>
                </li>
            </ul>
        </nav>
        <!-- /.navbar -->
        <!-- Main Sidebar Container -->
        <aside class="main-sidebar sidebar-dark-primary elevation-4">
            <!-- Brand Logo -->

            <span class="brand-link"> <img src="~/images/logo.png" alt="Logo" class="brand-image" style="opacity:1"> </span>

            <div class="clearfix"></div>
            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Sidebar user panel (optional) -->
                @* <div class="user-panel mt-3 pb-3 mb-3 d-flex">
                    <div class="image"> <img src="~/images/avatar5.png" class="img-circle elevation-2" alt="User Image"> </div>
                    <div class="info"> <span class="d-block" id="dashboard_username" style="position: relative; top: 4px; color: #ffffff;">@TempData["nameTrimmed"]</span> </div>
                </div> *@

                <!-- Sidebar Menu -->
                <nav class="mt-2" style="padding-bottom: 100px;">
                    <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="true">

                        @if (TempData["UserRole"].ToString() == "1" || TempData["UserRole"].ToString() == "2")
                        {
                            @if (ViewBag.MenuId == KeyEnums.MenuKeys.liAdmin.ToString())
                            {
                                <li class="nav-item" id="li_admin">
                                    <a class="nav-link text-dark active" href="/Admin/Index">
                                        <i class="nav-icon fa fa-users"></i>
                                        <p>Users</p>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="nav-item" id="li_admin">
                                    <a class="nav-link text-dark" href="/Admin/Index">
                                        <i class="nav-icon fa fa-users"></i>
                                        <p>Users</p>
                                    </a>
                                </li>
                            }
                                                       
                            

                        }
                        @if (TempData["UserRole"].ToString() == "3")
                        {
                            @if (ViewBag.MenuId == KeyEnums.MenuKeys.liHome.ToString())
                            {
                                <li class="nav-item" id="liHome">
                                    <a class="nav-link text-dark active" href="/Home/Index">
                                        <i class="nav-icon fas fa-home "></i>
                                        <p>Home</p>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="nav-item" id="liHome">
                                    <a class="nav-link text-dark" href="/Home/Index">
                                        <i class="nav-icon fas fa-home "></i>
                                        <p>Home</p>
                                    </a>
                                </li>
                            }

                            @if (TempData["UserRole"].ToString() == "1" || TempData["UserRole"].ToString() == "2")
                            {
                                @if (ViewBag.MenuId == KeyEnums.MenuKeys.liSSML.ToString())
                                {
                                    <li class="nav-item" id="li_admin">
                                        <a class="nav-link text-dark active" href="/SSML/Index">
                                            <i class="nav-icon fas fa-tachometer-alt"></i>
                                            <p>SSML</p>
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="nav-item" id="li_dashboard">
                                        <a class="nav-link text-dark" href="/SSML/Index">
                                            <i class="nav-icon fas fa-tachometer-alt"></i>
                                            <p>SSML</p>
                                        </a>
                                    </li>
                                }
                            }


                        }

                        @if (TempData["UserRole"].ToString() == "1" || TempData["UserRole"].ToString() == "2")
                        {
                            @if (ViewBag.MenuId == KeyEnums.MenuKeys.liAddVoiceToUser.ToString())
                            {
                                <li class="nav-item" id="li_admin">
                                    <a class="nav-link text-dark active" href="/AddVoiceToUser/Index">
                                        <i class="nav-icon fa fa-music"></i>
                                        <p>Add Voice To User</p>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="nav-item" id="li_admin">
                                    <a class="nav-link text-dark" href="/AddVoiceToUser/Index">
                                        <i class="nav-icon fa fa-music"></i>
                                        <p>Add Voice To User</p>
                                    </a>
                                </li>
                            }
                        }


                       

                        @if (TempData["UserRole"].ToString() == "1" || TempData["UserRole"].ToString() == "2" || TempData["UserRole"].ToString() == "3")
                        {
                            @if (ViewBag.MenuId == KeyEnums.MenuKeys.liTransaction.ToString())
                            {
                                <li class="nav-item" id="liHome">
                                    <a class="nav-link text-dark active" href="/Transaction/Index">
                                        <i class="nav-icon fas fa-money-bill"></i>
                                        <p>Transaction</p>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="nav-item" id="liHome">
                                    <a class="nav-link text-dark" href="/Transaction/Index">
                                        <i class="nav-icon fas fa-money-bill"></i>
                                        <p>Transaction</p>
                                    </a>
                                </li>
                            }
                        }
                        
                        @if (TempData["UserRole"].ToString() == "1" || TempData["UserRole"].ToString() == "2")
                        {
                            @if (ViewBag.MenuId == KeyEnums.MenuKeys.liVoice.ToString())
                            {
                                <li class="nav-item" id="liHome">
                                    <a class="nav-link text-dark active" href="/VoiceMapper/Index">
                                        <i class="nav-icon fas fa-microphone"></i>
                                        <p>Voice</p>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="nav-item" id="liHome">
                                    <a class="nav-link text-dark" href="/VoiceMapper/Index">
                                        <i class="nav-icon fas fa-microphone"></i>
                                        <p>Voice</p>
                                    </a>
                                </li>
                            }
                        }


                        @if (TempData["UserRole"].ToString() == "3")
                        {
                            @if (ViewBag.MenuId == KeyEnums.MenuKeys.liPronunciation.ToString())
                            {
                                <li class="nav-item" id="liHome">
                                    <a class="nav-link text-dark active" href="/Pronunciation/Index">
                                        <i class="nav-icon fa fa-language"></i>
                                        <p>Pronunciation</p>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="nav-item" id="liHome">
                                    <a class="nav-link text-dark" href="/Pronunciation/Index">
                                        <i class="nav-icon fa fa-language"></i>
                                        <p>Pronunciation</p>
                                    </a>
                                </li>
                            }
                        }

                        

                    </ul>
                </nav>
                <!-- /.sidebar-menu -->
            </div>
            <!-- /.sidebar -->
        </aside>

        <div>
            @* <div class="box" id="divLoaderOnLayoutResultSummary">
                <div class="overlay"></div>
                <div class="loading-img"></div>
            </div> *@
            @RenderBody()
        </div>

        <footer class="border-top main-footer text-muted">
            <div class="">                
                V1.0.0, Copyright &copy; GoPhygital 2024.
                <div class="float-right d-none d-sm-inline-block">
                Powered by <a href="https://www.gophygital.io/" target="_blank" class="links" rel="noopener">GoPhygital</a>
                </div>
            </div>
        </footer>
    </div>
    <!-- ./wrapper -->
    @RenderSection("Scripts", required: false)


    <script id="scriptLoader" type="application/htmlMessage">
        <div class="overlay"></div>
        <div class="loading-img"></div>
    </script>
    <script id="scriptLoaderSmall" type="application/htmlMessage">
        <div class="overlay"></div>
        <div class="loading-img-small"></div>
    </script>

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-asdasd"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'G-asdasd');
    </script>
</body>
</html>
